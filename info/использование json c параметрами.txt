1) Создаем json файл с допустим с названием config.json
и ложим в него содержимое в таком виде:
{
  "login_stepik": "test@gmail.com",
  "password_stepik": "test"
}


2) импортируем библиотеку и создаем фикстуру:

import json
@pytest.fixture(scope="session")
def load_config():
    # Открываем файл с конфигом в режиме чтения
    with open('config.json', 'r') as config_file:
        # С помощью библиотеки json читаем и возвращаем результат
        config = json.load(config_file)
        return config

3) Затем не забываем его результат передать в тестируемую функцию таким же образом как вы передаете состояние других фикстур таких как браузер и.т.д. т.к вызываемая функция у меня называется load_config, его имя я и передаю: а затем уже результат этих переменных используете там где считаете нужным:

class TestLogin:
    def test_authorization(self, browser, wait, load_config):

        login = load_config['login_stepik']
        password = load_config['password_stepik']

4) Для того чтобы при выгрузке данных в git не выгружался этот файл с ключами создаем текстовый файл .gitignore  (обратите внимание на точку, и также необходимо удалить txt расширение в конце) и добавляем в него название нашего файла с расширением который нужно игнорировать в моем случае добавляю строку:
config.json