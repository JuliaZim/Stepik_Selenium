@pytest.mark.mark_name, где mark_name — произвольная строка.
@pytest.mark.smoke или @pytest.mark.regression

Чтобы запустить тест с нужной маркировкой, нужно передать в командной строке параметр -m и нужную метку:
pytest -s -v -m smoke test_fixture8.py

Как же регистрировать метки?
Создайте файл pytest.ini в корневой директории вашего тестового проекта и добавьте в файл следующие строки:

[pytest]
markers =
    smoke: marker for smoke tests
    regression: marker for regression tests
Текст после знака ":" является поясняющим — его можно не писать.
Так же можно маркировать целый тестовый класс.
В этом случае маркировка будет применена ко всем тестовым методам, входящим в класс.

Чтобы запустить все тесты, не имеющие заданную маркировку, можно использовать инверсию. Для запуска всех тестов, не отмеченных как smoke, нужно выполнить команду:
pytest -s -v -m "not smoke" test_fixture8.py

Чтобы запустить только smoke-тесты для Windows 10, нужно использовать логическое И:
pytest -s -v -m "smoke and win10" test_fixture81.py

чтобы пропустить тест, его отмечают в коде как @pytest.mark.skip: маркер не нужно заводить в файл
Если маркировка skip добавляется к функции, где уже есть другие маркировки, то skip должен быть последним маркером, иначе пропускаться не будет.
для пропущенного теста можно оставлять комментарий.
Например, @pytest.mark.skip(reason="Reason to skip test")
 Чтобы увидеть это сообщение в консоли, при запуске нужно добавлять параметр pytest -rx.

Отметить тест как падающий
. Добавим маркировку @pytest.mark.xfail для падающего теста.
 упавший тест теперь отмечен как xfail, но результат прогона тестов помечен как успешный
 Когда баг починят, мы это узнаем, так как теперь тест будет отмечен как XPASS

